{"ast":null,"code":"var _jsxFileName = \"/home/sluki/\\xC1rea de Trabalho/code/material-ui/src/components/ModalConfirm.js\";\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalConfirm = _ref => {\n  let {\n    open,\n    onOpen,\n    onClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open alert dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ModalConfirm;\nexport default ModalConfirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalConfirm\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ModalConfirm","open","onOpen","onClose","handleClickOpen","handleClose"],"sources":["/home/sluki/Área de Trabalho/code/material-ui/src/components/ModalConfirm.js"],"sourcesContent":["import * as React from 'react';\n\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from '@mui/material';\n\nconst ModalConfirm = ({open, onOpen, onClose}) => {\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous\n            location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={handleClose} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ModalConfirm\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,iBALJ,EAMIC,WANJ,QAOO,eAPP;;;AASA,MAAMC,YAAY,GAAG,QAA6B;EAAA,IAA5B;IAACC,IAAD;IAAOC,MAAP;IAAeC;EAAf,CAA4B;EAEhD,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,UAAhB;MAA2B,OAAO,EAAEC,eAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,MAAD;MACE,IAAI,EAAEH,IADR;MAEE,OAAO,EAAEI,WAFX;MAGE,mBAAgB,oBAHlB;MAIE,oBAAiB,0BAJnB;MAAA,wBAME,QAAC,WAAD;QAAa,EAAE,EAAC,oBAAhB;QAAA,UACG;MADH;QAAA;QAAA;QAAA;MAAA,QANF,eASE,QAAC,aAAD;QAAA,uBACE,QAAC,iBAAD;UAAmB,EAAE,EAAC,0BAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF,eAeE,QAAC,aAAD;QAAA,wBACE,QAAC,MAAD;UAAQ,OAAO,EAAEA,WAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAQ,OAAO,EAAEA,WAAjB;UAA8B,SAAS,MAAvC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CA/BD;;KAAML,Y;AAiCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}